<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BackendNotFoundError" xml:space="preserve">
    <value>Protocolo não encontrado: {0}</value>
  </data>
  <data name="BadSortingDetectedError" xml:space="preserve">
    <value>Detectada classificação incorreta dos tempos de backup</value>
  </data>
  <data name="BadVolumeSortOrder" xml:space="preserve">
    <value>Detectado classificação incorreta dos volumes de backup</value>
  </data>
  <data name="DeletingBackupSetMessage" xml:space="preserve">
    <value>Removendo backup em {0}</value>
  </data>
  <data name="FailedToFindControlFilesMessage" xml:space="preserve">
    <value>Não foi possível encontrar os arquivos de controle em: {0}</value>
  </data>
  <data name="FilesAreNotForceDeletedMessage" xml:space="preserve">
    <value>Os arquivos não são apagados, utilize o comando --force para apagar os arquivos</value>
  </data>
  <data name="ManifestNoFilesError" xml:space="preserve">
    <value>Lista de arquivos inválida, nenhum arquivo encontrado: {0}</value>
  </data>
  <data name="ManifestWrongCountError" xml:space="preserve">
    <value>Lista de arquivos inválida, contagem incorreta: {0}</value>
  </data>
  <data name="NotDeletingBackupSetMessage" xml:space="preserve">
    <value>Não é possível apagar o backup com a hora: {0}, porque backups posteriores dependem dele</value>
  </data>
  <data name="PartialUploadMessage" xml:space="preserve">
    <value>Falha ao fazer upload de {0} volume(s). Mensagem de erro: {1}</value>
  </data>
  <data name="RemovingPartialFilesMessage" xml:space="preserve">
    <value>Apagando arquivo parcial: {0}</value>
  </data>
  <data name="SignatureCachePathMissingError" xml:space="preserve">
    <value>O caminho para o cache de assinaturas não foi informado como um argumento</value>
  </data>
  <data name="StatusBuildingFilelist" xml:space="preserve">
    <value>Criando lista de arquivos ...</value>
  </data>
  <data name="StatusCompleted" xml:space="preserve">
    <value>Completa</value>
  </data>
  <data name="StatusCreatingVolume" xml:space="preserve">
    <value>Criando volume {0}</value>
  </data>
  <data name="StatusLoadingFilelist" xml:space="preserve">
    <value>Carregando lista de arquivos remota</value>
  </data>
  <data name="StatusPatching" xml:space="preserve">
    <value>Aplicando incremental a restauração #{0}</value>
  </data>
  <data name="StatusProcessing" xml:space="preserve">
    <value>Processando: {0}</value>
  </data>
  <data name="StatusReadingIncrementalData" xml:space="preserve">
    <value>Lendo dados incrementais ...</value>
  </data>
  <data name="StatusReadingIncrementalFile" xml:space="preserve">
    <value>Lendo dados incrementais de: {0}</value>
  </data>
  <data name="StatusReadingIncrementals" xml:space="preserve">
    <value>Lendo dados incrementais</value>
  </data>
  <data name="StatusReadingManifest" xml:space="preserve">
    <value>Lendo lista de arquivos: {0}</value>
  </data>
  <data name="StatusReadingSignatureFile" xml:space="preserve">
    <value>Lendo assinaturas: {0}, vol {1}</value>
  </data>
  <data name="StatusStarted" xml:space="preserve">
    <value>Iniciado</value>
  </data>
  <data name="StatusUploadingContentVolume" xml:space="preserve">
    <value>Enviando conteúdo, volume {0}</value>
  </data>
  <data name="StatusUploadingManifestVolume" xml:space="preserve">
    <value>Enviando lista de arquivos, volume {0}</value>
  </data>
  <data name="StatusUploadingSignatureVolume" xml:space="preserve">
    <value>Enviando assinaturas, volume {0}</value>
  </data>
  <data name="UnexpectedCompressionError" xml:space="preserve">
    <value>Modo de compressão não reconhecido: {0}</value>
  </data>
</root>